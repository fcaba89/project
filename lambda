Lambda Get function

import json
import boto3

def lambda_handler(event, context):
    try:
        # Create a DynamoDB resource with the specified region
        dynamodb = boto3.resource('dynamodb', region_name='us-east-2')

        # Specify the DynamoDB table
        table = dynamodb.Table('tablefranky')

        # Perform the initial scan
        response = table.scan()
        data = response['Items']

        # Continue scanning if there are more items
        while 'LastEvaluatedKey' in response:
            response = table.scan(ExclusiveStartKey=response['LastEvaluatedKey'])
            data.extend(response['Items'])
	
       #return a properly formatted JSON object
        return {
            'statusCode': 200,
            'body': json.dumps(data)
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': json.dumps({'error': str(e)})
        }








Lambda Insert Function

import json
import boto3

#create a DynamoDB object using the AWS SDK
dynamodb = boto3.resource('dynamodb')
#Use the DynamoDB object to select my table
table = dynamodb.Table('tablefranky')

#define the handler function that the Lambda service will use as an entry point
def lambda_handler(event, context):
#extract values from the event object we got from the Lambda service and store in a vaiable
        firstname = event['empFirstName']
        id=event['empId']
        lastname=event['empLastName']
        age=event['empAge']
#write name and time to the DynamoDB table using the object we instantiated and save response in a variable
        response = table.put_item(
            Item={
                'empId' : id,
                'empAge' :age,
                'empFirstName' :firstname,
                'empLastName' :lastname
            })
#return a properly formatted JSON object
        return {
            'statusCode': 200,
            'body': json.dumps('Hello from Lambda, ' + firstname)
        }
        
